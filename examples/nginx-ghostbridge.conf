# GhostBridge Nginx Configuration
# Production configuration for hobsonschoice.net
# Includes critical stream module configuration for MQTT TCP proxy

user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    multi_accept on;
    use epoll;
}

# HTTP Configuration
http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/javascript application/xml+rss application/json;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Netmaker API Server
    server {
        listen 80;
        server_name netmaker.hobsonschoice.net;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name netmaker.hobsonschoice.net;
        
        ssl_certificate /etc/letsencrypt/live/netmaker.hobsonschoice.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/netmaker.hobsonschoice.net/privkey.pem;
        
        location / {
            proxy_pass http://10.0.0.101:8081;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # MQTT Broker WebSocket
    server {
        listen 80;
        server_name broker.hobsonschoice.net;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name broker.hobsonschoice.net;
        
        ssl_certificate /etc/letsencrypt/live/broker.hobsonschoice.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/broker.hobsonschoice.net/privkey.pem;
        
        location / {
            proxy_pass http://10.0.0.101:9001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for MQTT
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # Dashboard/UI
    server {
        listen 80;
        server_name dashboard.hobsonschoice.net;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name dashboard.hobsonschoice.net;
        
        ssl_certificate /etc/letsencrypt/live/dashboard.hobsonschoice.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dashboard.hobsonschoice.net/privkey.pem;
        
        # Serve static files or proxy to dashboard service
        root /var/www/netmaker-ui;
        index index.html;
        
        location / {
            try_files $uri $uri/ @netmaker_api;
        }
        
        location @netmaker_api {
            proxy_pass http://10.0.0.101:8081;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

# Stream Configuration (CRITICAL for MQTT TCP proxy)
# This section addresses the major nginx stream module issue
stream {
    log_format basic '$remote_addr [$time_local] '
                     '$protocol $status $bytes_sent $bytes_received '
                     '$session_time';

    access_log /var/log/nginx/stream.log basic;
    error_log /var/log/nginx/stream_error.log;

    # MQTT TCP Stream Proxy
    # Critical configuration for GhostBridge MQTT broker access
    upstream mqtt_backend {
        server 10.0.0.101:1883;
    }

    server {
        listen 1883;
        proxy_pass mqtt_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/mqtt_stream.log;
    }
}